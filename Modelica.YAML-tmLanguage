# [PackageDev] target_format: plist, ext: tmLanguage
name: Modelica
scopeName: source.modelica
fileTypes: [mo]
uuid: 43df6fac-7928-42e2-9890-f5073aaddb14

patterns:

- name: comment.block
  begin: /\*
  end: \*/

- name: comment.block
  begin: annotation
  end: ;\s*\n

- name: comment.line
  match: (//).*$\n?

- name: constant.language
  match: \b(true|false)\b

- name: constant.numeric
  match: \b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b

- name: storage.type
  match: \b(Real|Integer|Boolean|String)\b

- name: storage.modifier
  match: \b(constant|final|parameter|expandable|replaceable|redeclare|constrainedby|import|flow|stream|input|output|discrete|connector)\b

- name: keyword
  match: \b\s*([A-Z])(?:([^ ;$]+)(;)?)([.]([A-Z])(?:([^ ;$]+)(;)?)?)++\b

- name: keyword.control
  match: \b(for|if|when|while|then|loop|end if|end when|end for|end while|else|elsewhen|and|break|each|elseif)\b

- name: keyword.operator.logical
  match: \b(and|or|not)\b

- name: keyword.operator.comparison
  match: <|<\=|>|>\=|\=\=|<>

- name: keyword.operator.arithmetic
  match: \+|\-|\.\+|\.\-|\*|\.\*|/|\./|\^

- name: keyword.operator.assignment
  match: \=

- name: support.function.mathematical
  match: \b(acos|asin|atan|atan2|cos|cosh|exp|log|log10|sin|sinh|tan|tanh|abs|sign|sqrt|max|min|product|sum)\b

- name: support.function.array
  match: \b(scalar|vector|matrix|identity|diagonal|zeros|ones|fill|linspace|transpose|outerProduct|symmetric|cross|skew)\b

- name: support.function.event
  match: \b(ceil|div|fill|floor|integer|max|min|mod|rem|pre|noEvent|change|edge|initial|terminal|reinit|sample|smooth|terminate)\b

- name: support.function.special
  match: \b(connect|der|inStream|actualStream|semiLinear|spatialDistribution|getInstanceName|homotopy|delay|assert|ndims|size|cardinality|isPresent)\b

- name: support.type
  match: \b(extends|partial|within)\b

- name: keyword
  match: \b(algorithm|equation|protected|public|register|end|initial)\b

- match: \b((model|class|record|block|package)\s+\w+)\b
  captures:
    '1': {name: entity.name.type.modelica}
    '2': {name: keyword}

- match: ((function)\s+\w+)
  captures:
    '1': {name: entity.name.function}
    '2': {name: keyword}

- name: entity.other.inherited-class
  begin: '"'
  end: '"'
